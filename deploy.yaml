apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  creationTimestamp: null
  generation: 8
  labels:
    app: strimzi-connect
    strimzi.io/cluster: my-connect-cluster
    strimzi.io/kind: KafkaConnect
    strimzi.io/name: my-connect-cluster-connect
  name: my-connect-cluster-connect
spec:
  replicas: 1
  selector:
    matchLabels:
      app: strimzi-connect
      strimzi.io/cluster: my-connect-cluster
      strimzi.io/kind: KafkaConnect
      strimzi.io/name: my-connect-cluster-connect
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: strimzi-connect
        strimzi.io/cluster: my-connect-cluster
        strimzi.io/kind: KafkaConnect
        strimzi.io/name: my-connect-cluster-connect
    spec:
      containers:
      - env:
        - name: KAFKA_CONNECT_CONFIGURATION
          value: |
            group.id=connect-cluster
            key.converter=org.apache.kafka.connect.json.JsonConverter
            offset.storage.replication.factor=3
            internal.key.converter.schemas.enable=false
            config.storage.replication.factor=3
            value.converter=org.apache.kafka.connect.json.JsonConverter
            bootstrap.servers=my-cluster-kafka-bootstrap\:9092
            key.converter.schemas.enable=true
            config.storage.topic=connect-cluster-configs
            status.storage.topic=connect-cluster-status
            offset.storage.topic=connect-cluster-offsets
            internal.key.converter=org.apache.kafka.connect.json.JsonConverter
            status.storage.replication.factor=3
            internal.value.converter.schemas.enable=false
            value.converter.schemas.enable=true
            internal.value.converter=org.apache.kafka.connect.json.JsonConverter
        - name: KAFKA_CONNECT_METRICS_ENABLED
          value: "true"
        - name: DYNAMIC_HEAP_FRACTION
          value: "1.0"
        image: strimzi/kafka-connect:latest
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: rest-api
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        name: my-connect-cluster-connect
        ports:
        - containerPort: 8083
          name: rest-api
          protocol: TCP
        - containerPort: 9404
          name: kafkametrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: rest-api
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /opt/kafka/custom-config/
          name: kafka-metrics-and-logging
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          name: my-connect-cluster-connect-config
        name: kafka-metrics-and-logging
status:
  conditions:
  - lastTransitionTime: 2018-07-29T18:52:48Z
    lastUpdateTime: 2018-07-29T18:52:48Z
    message: Deployment does not have minimum availability.
    reason: MinimumReplicasUnavailable
    status: "False"
    type: Available
  observedGeneration: 8
  replicas: 1
  unavailableReplicas: 1
  updatedReplicas: 1
